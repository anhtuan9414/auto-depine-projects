function i(e){return new Promise((t,s)=>{e.oncomplete=e.onsuccess=()=>t(e.result),e.onabort=e.onerror=()=>s(e.error)})}function g(e,t){const s=indexedDB.open(e);s.onupgradeneeded=()=>s.result.createObjectStore(t);const o=i(s);return(u,f)=>o.then(d=>f(d.transaction(t,u).objectStore(t)))}let a;function r(){return a||(a=g("keyval-store","keyval")),a}function b(e,t=r()){return t("readonly",s=>i(s.get(e)))}function l(e,t,s=r()){return s("readwrite",o=>(o.put(t,e),i(o.transaction)))}let n={version:"0.1.9",token:!1,stats:{status:"disconnected",solvedTasks:0,totalUptime:0,creditsEarned:0,totalEarnings:0,networkPerformance:.5},models:[],system:{}};const c=new BroadcastChannel("oasis/database"),m=async e=>{const t=Object.assign({},n);"token"in e&&(t.token=e.token),"models"in e&&(t.models=e.models),"stats"in e&&(t.stats={...n.stats,...e.stats}),"system"in e&&(t.system={...n.system,...e.system}),await l("database",t),n=t,c.postMessage(n)},y=async()=>{const e=await b("database");e?n=e:await l("database",e),c.addEventListener("message",t=>m(t.data))},p=e=>{let t;typeof e=="object"?t=JSON.stringify(e,null,4):t=e;let s=new Date().toISOString();console.log(`${s}: ${t}`)},S=e=>{let t;typeof e=="object"?t=JSON.stringify(e,null,4):t=e;let s=new Date().toISOString();console.log(`ERROR: ${s}: ${t}`)};export{S as a,n as d,y as i,p as l,m as u};
